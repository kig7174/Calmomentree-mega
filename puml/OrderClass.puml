@startuml
skinparam dpi 200
skinparam classAttributeIconSize 0
skinparam shadowing false

class OrderController {
    + OrderController()
    + orderBasket(Model, Member): String
    + orderAdd(Model, HttpServletRequest, Member, List<Integer>): String
    + orderAddByDetail(Model, HttpServletRequest, Member, int, int): String
    + orderOk(Model, Member, int, String, String, String, String, String, String, String, String, String, String, String, Integer, List<Integer>): String
}

class OrderRestController {
    + OrderRestController()
    + basketCount(int): Map<String, Object>
    + uniqueBasket(HttpServletRequest, Member, Integer): Map<String, Object>
    + uniqueBasketEdit(String, String, Member): Map<String, Object>
    + basketEdit(String, String, Member): Map<String, Object>
    + basketDelete(String, Member): Map<String, Object>
    + basketListDelete(List<Integer>, Member): Map<String, Object>
    + basketAdd(Member, int, int): Map<String, Object>
    + orderSearch(String): Map<String, Object>
}

class OrderService {
    + addItem(Order): Order
    + editItem(Order): Order
    + deleteItem(Order): int
    + getItem(Order): Order
    + getList(Order): List<Order>
    + getCount(Order): int
    + overCount(Order): int
    + deleteByCancelOrder(): int
}

class OrderServiceImpl {
    + addItem(Order): Order
    + editItem(Order): Order
    + deleteItem(Order): int
    + getItem(Order): Order
    + getList(Order): List<Order>
    + getCount(Order): int
    + overCount(Order): int
    + deleteByCancelOrder(): int
}

class BasketService {
    + addItem(Basket): Basket
    + editItem(Basket): Basket
    + deleteItem(Basket): int
    + getItem(Basket): Basket
    + getList(Basket): List<Basket>
    + getCount(Basket): int
    + uniqueBasketCount(Basket): Basket
    + editUniqueBasket(Basket): Basket
    + deleteByOverDays(): int
}

class BasketServiceImpl {
    + addItem(Basket): Basket
    + editItem(Basket): Basket
    + deleteItem(Basket): int
    + getItem(Basket): Basket
    + getList(Basket): List<Basket>
    + getCount(Basket): int
    + uniqueBasketCount(Basket): Basket
    + editUniqueBasket(Basket): Basket
    + deleteByOverDays(): int
}

class ProductService {
    + addItem(Product): Product
    + editItem(Product): Product
    + deleteItem(Product): int
    + getItem(Product): Product
    + getListByCategory(Product): List<Product>
    + getCount(Product): int
    + getListBySearch(Product): List<Product
}

class ProductServiceImpl {
    + addItem(Product): Product
    + editItem(Product): Product
    + deleteItem(Product): int
    + getItem(Product): Product
    + getListByCategory(Product): List<Product>
    + getCount(Product): int
    + getListBySearch(Product): List<Product
}

class RestHelper {
    + RestHelper()
    + sendJson(int, String, Map<String, Object>, Exception): Map<String, Object>
    + sendJson(Map<String, Object>): Map<String, Object>
    + sendJson(): Map<String, Object>
    + sendError(int, String): Map<String, Object>
    + badRequest(String): Map<String, Object>
    + badRequest(Exception): Map<String, Object>
    + serverError(String): Map<String, Object>
}

class FileHelper {
    + FileHelper()
    + saveFile(MultipartFile, String): String
    + deleteFile(String): boolean
    + getFile(String): File
}

class RegexHelper {
    + RegexHelper()
    + isValue(String): boolean
    + isEmail(String): boolean
    + isPhone(String): boolean
    + isNum(String): boolean
}

class WebHelper {
    + WebHelper()
    + getRequest(): HttpServletRequest
    + getResponse(): HttpServletResponse
    + getSession(): HttpSession
    + getParameter(String): String
    + getParameter(String, String): String
    + getParameterValues(String): String[]
    + getCookie(String): Cookie
    + setCookie(String, String, int): void
    + removeCookie(String): void
}

OrderController --> OrderService
OrderController --> BasketService
OrderController --> ProductService
OrderController --> FileHelper
OrderController --> RegexHelper
OrderController --> WebHelper

OrderRestController --> RestHelper
OrderRestController --> FileHelper
OrderRestController --> OrderService
OrderRestController --> BasketService
OrderRestController --> ProductService

OrderServiceImpl --> OrderService
BasketServiceImpl --> BasketService
ProductServiceImpl --> ProductService

' 배치 수정
OrderController -[hidden]-> OrderRestController
OrderService -[hidden]-> OrderServiceImpl
BasketService -[hidden]-> BasketServiceImpl
ProductService -[hidden]-> ProductServiceImpl
RestHelper -[hidden]-> FileHelper
RegexHelper -[hidden]-> WebHelper

@enduml